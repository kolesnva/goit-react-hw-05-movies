{"version":3,"file":"static/js/63.4a4245d0.chunk.js","mappings":"uQAGaA,EAASC,EAAAA,GAAAA,IAAH,sBACNC,EAAaD,EAAAA,GAAAA,GAAH,sBACVE,EAAcF,EAAAA,GAAAA,GAAH,sBACXG,EAAcH,EAAAA,GAAAA,GAAH,sB,GAEWA,EAAAA,GAAAA,GAAH,uBACTA,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,sBACGA,EAAAA,GAAAA,OAAH,sB,QCwCpB,MAxCA,WACE,OAA0BK,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,EAC5B,GAAE,CAACC,KAGF,8BACGF,IACC,4BACE,SAACL,EAAD,oBAAgBK,EAAMO,MAAtB,aAAgCP,EAAMQ,aAAaC,MACjD,EACA,GAFF,QAIA,SAAChB,EAAD,CACEiB,IAAG,yCAAoCV,EAAMW,aAC7CC,IAAKZ,EAAMO,SAEb,UAACX,EAAD,YACE,SAACC,EAAD,WACE,8CAAoD,GAAhCG,EAAMa,aAAaC,QAAQ,GAA/C,UAEF,UAACjB,EAAD,YACE,oCACA,uBAAIG,EAAMe,eAEZ,UAAClB,EAAD,YACE,qCACA,uBAAIG,EAAMgB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,kBAO5D,C,2MC9CKC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,IAAAA,IAAA,qCAAwCF,IAF5D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACCC,EAAe,IAAIC,gBAAgB,CACvCC,QAASX,EACTY,MAAOJ,EACPK,KAAM,IAJH,kBAOoBX,IAAAA,IAAA,uBAA0BO,IAP9C,uBAOKN,EAPL,EAOKA,KAPL,kBAQIA,GARJ,gCAUHC,QAAQC,IAAI,KAAMC,SAVf,gFAcA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,kGAEoBqB,IAAAA,IAAA,gBAAmBrB,EAAnB,oBAAsCmB,IAF1D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA4BjC,GAA5B,kGAEoBqB,IAAAA,IAAA,gBACZrB,EADY,4BACemB,IAHnC,uBAEKG,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlC,GAA/B,kGAEoBqB,IAAAA,IAAA,gBACZrB,EADY,4BACemB,IAHnC,uBAEKG,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAR,MAPG,gFA7CPH,IAAAA,SAAAA,QAAyB,+B","sources":["components/MovieInfo/MovieInfoStyled.js","components/MovieInfo/MovieInfo.js","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Poster = styled.img``;\nexport const MovieTitle = styled.h2``;\nexport const CreditsList = styled.ul``;\nexport const CreditsItem = styled.li``;\n\nexport const MovieNavigationWrap = styled.ul``;\nexport const NavItem = styled(NavLink)``;\nexport const BackBtn = styled.button``;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/moviesAPI';\nimport {\n  Poster,\n  MovieTitle,\n  CreditsList,\n  CreditsItem,\n} from './MovieInfoStyled';\n\nfunction MovieInfo() {\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <div>\n          <MovieTitle>{`${movie.title} (${movie.release_date.slice(\n            0,\n            4\n          )})`}</MovieTitle>\n          <Poster\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <CreditsList>\n            <CreditsItem>\n              <h3>{`User score: ${movie.vote_average.toFixed(2) * 10}%`}</h3>\n            </CreditsItem>\n            <CreditsItem>\n              <h3>About:</h3>\n              <p>{movie.overview}</p>\n            </CreditsItem>\n            <CreditsItem>\n              <h3>Genres:</h3>\n              <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n            </CreditsItem>\n          </CreditsList>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default MovieInfo;\n","import axios from 'axios';\n\nconst API_KEY = 'f0766e9050bf27a2816eaba7638d5b74';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  try {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMoviesByName(searchQuery) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: searchQuery,\n    page: 1,\n  });\n  try {\n    const { data } = await axios.get(`search/movie?${searchParams}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Poster","styled","MovieTitle","CreditsList","CreditsItem","NavLink","useState","movie","setMovie","movieId","useParams","useEffect","getMovieById","then","title","release_date","slice","src","poster_path","alt","vote_average","toFixed","overview","genres","map","genre","name","join","API_KEY","getTrendingMovies","axios","data","console","log","message","getMoviesByName","searchQuery","searchParams","URLSearchParams","api_key","query","page","getMovieCast","getMovieReviews"],"sourceRoot":""}