{"version":3,"file":"static/js/369.fbcc4889.chunk.js","mappings":"qPAEaA,EAAcC,EAAAA,GAAAA,GAAH,sBACXC,EAAcD,EAAAA,GAAAA,GAAH,sB,SCkCxB,MAhCA,WAAoB,IAAD,EACjB,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAQ,aACpCN,EAAe,iBAACM,QAAD,IAACA,OAAD,EAACA,EAAUC,eAAX,QAAsB,GADD,GAGvC,GAAE,CAACN,KAGF,+BACE,2BACGF,EAAaS,OAAS,IACrB,SAACb,EAAD,UACGI,EAAaU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OAChB,UAACf,EAAD,YACE,wBAAKe,KACL,uBAAID,MAFYD,EADF,MAHxB,UAY2B,IAAxBX,EAAaS,cAZhB,SAaI,wEAKT,C,2MCjCKK,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,IAAAA,IAAA,qCAAwCF,IAF5D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACCC,EAAe,IAAIC,gBAAgB,CACvCC,QAASX,EACTY,MAAOJ,EACPK,KAAM,IAJH,kBAOoBX,IAAAA,IAAA,uBAA0BO,IAP9C,uBAOKN,EAPL,EAOKA,KAPL,kBAQIA,GARJ,gCAUHC,QAAQC,IAAI,KAAMC,SAVf,gFAcA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA4B1B,GAA5B,kGAEoBc,IAAAA,IAAA,gBAAmBd,EAAnB,oBAAsCY,IAF1D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA4B3B,GAA5B,kGAEoBc,IAAAA,IAAA,gBACZd,EADY,4BACeY,IAHnC,uBAEKG,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,kGAEoBc,IAAAA,IAAA,gBACZd,EADY,4BACeY,IAHnC,uBAEKG,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAR,MAPG,gFA7CPH,IAAAA,SAAAA,QAAyB,+B","sources":["pages/Reviews/ReviewsStyled.js","pages/Reviews/Reviews.js","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul``;\nexport const ReviewsItem = styled.li``;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/moviesAPI';\nimport { ReviewsList, ReviewsItem } from './ReviewsStyled';\n\nfunction Reviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(response =>\n      setMovieReviews(response?.results ?? [])\n    );\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        {movieReviews.length > 0 && (\n          <ReviewsList>\n            {movieReviews.map(({ id, content, author }) => (\n              <ReviewsItem key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </ReviewsItem>\n            ))}\n          </ReviewsList>\n        )}\n\n        {movieReviews.length === 0 ?? (\n          <p>There are no reviews for this movie yet.</p>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'f0766e9050bf27a2816eaba7638d5b74';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  try {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMoviesByName(searchQuery) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: searchQuery,\n    page: 1,\n  });\n  try {\n    const { data } = await axios.get(`search/movie?${searchParams}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["ReviewsList","styled","ReviewsItem","useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","getMovieReviews","then","response","results","length","map","id","content","author","API_KEY","getTrendingMovies","axios","data","console","log","message","getMoviesByName","searchQuery","searchParams","URLSearchParams","api_key","query","page","getMovieById","getMovieCast"],"sourceRoot":""}