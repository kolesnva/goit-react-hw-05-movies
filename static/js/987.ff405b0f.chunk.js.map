{"version":3,"file":"static/js/987.ff405b0f.chunk.js","mappings":"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","sources":["components/MovieList/MovieListStyled.js","components/MovieList/MovieList.js","components/Searchbar/SearchbarStyled.js","components/Searchbar/Searchbar.js","pages/Movies/Movies.js","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-rows: auto;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: ${p => p.theme.space[1]}px;\n`;\nexport const Item = styled(Link)`\n  border-radius: ${p => p.theme.radii.md};\n  padding-top: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[1]}px;\n  display: block;\n  text-decoration: none;\n  color: ${p => p.theme.colors.white};\n\n  :hover {\n    color: ${p => p.theme.colors.primary};\n    box-shadow: 5px 5px 15px 5px #737372;\n  }\n`;\nexport const Poster = styled.img`\n  display: block;\n  margin: 0 auto;\n`;\nexport const MovieTitle = styled.h2`\n  text-decoration: none;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { List, Item, Poster, MovieTitle } from './MovieListStyled';\nimport { useLocation } from 'react-router-dom';\n\nfunction MovieList({ items }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {items.map(({ id, title, poster_path }) => (\n        <li key={id}>\n          <Item to={`/movies/${id}`} state={{ from: location }}>\n            <Poster\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt={title}\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </Item>\n        </li>\n      ))}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nexport const Form = styled.form`\n  margin-top: ${p => p.theme.space[5]}px;\n  display: flex;\n`;\nexport const Input = styled.input`\n  outline: none;\n  display: inline-block;\n\n  border-radius: ${p => p.theme.radii.sm};\n  padding: ${p => p.theme.space[2]}px;\n  height: ${p => p.theme.space[5]}px;\n  width: ${p => p.theme.space[8]}px;\n  background-color: transparent;\n  &:hover {\n    box-shadow: 5px 5px 15px 5px #737372;\n  }\n  &:focus {\n    box-shadow: 5px 5px 15px 5px #737372;\n    color: ${p => p.theme.colors.primary};\n    font-size: ${p => p.theme.fontSizes.l};\n  }\n  &.active {\n    box-shadow: 5px 5px 15px 5px #737372;\n  }\n`;\nexport const SubmitBtn = styled.button`\n  cursor: pointer;\n  outline: none;\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-left: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.sm};\n  display: inline-block;\n  text-align: center;\n  background-color: transparent;\n  border: none;\n  &:hover,\n  :focus {\n    transform: scale(1.2, 1.2);\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n","import { Container, Form, Input, SubmitBtn } from './SearchbarStyled';\nimport { useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { BiSearchAlt2 } from 'react-icons/bi';\n\nfunction Searchbar() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const input = useRef();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (query) {\n      input.current.value = query;\n    }\n  }, [searchParams]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.elements.input.value.trim();\n    query ? setSearchParams({ query }) : setSearchParams({});\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          name=\"input\"\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          ref={input}\n          placeholder=\"Enter movie name\"\n        />\n        <SubmitBtn type=\"submit\">\n          <BiSearchAlt2 size={24} />\n        </SubmitBtn>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Searchbar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByName } from 'services/moviesAPI';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieList from 'components/MovieList/MovieList';\n\nfunction Movies() {\n  const [requestedMovies, setRequestedMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  const [noResult, setNoResult] = useState(false);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (query) {\n      getMoviesByName(query).then(response => {\n        setRequestedMovies(response?.results ?? []);\n        setNoResult(!response?.results?.length);\n      });\n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <Searchbar />\n      {requestedMovies.length > 0 && <MovieList items={requestedMovies} />}\n\n      {noResult && <p>There was nothing found. Try to find something else</p>}\n    </div>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'f0766e9050bf27a2816eaba7638d5b74';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  try {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMoviesByName(searchQuery) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: searchQuery,\n    page: 1,\n  });\n  try {\n    const { data } = await axios.get(`search/movie?${searchParams}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["List","styled","p","theme","space","Item","Link","radii","md","colors","white","primary","Poster","MovieTitle","items","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Container","Form","Input","sm","fontSizes","l","SubmitBtn","useSearchParams","searchParams","setSearchParams","input","useRef","useEffect","query","get","current","value","onSubmit","event","preventDefault","target","elements","trim","name","type","autocomplete","autoFocus","ref","placeholder","size","useState","requestedMovies","setRequestedMovies","noResult","setNoResult","getMoviesByName","then","response","results","length","MovieList","API_KEY","getTrendingMovies","axios","data","console","log","message","searchQuery","URLSearchParams","api_key","page","getMovieById","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}